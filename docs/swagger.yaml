basePath: /api/v1
definitions:
  models.GenderType:
    enum:
    - male
    - female
    type: string
    x-enum-varnames:
    - GenderMale
    - GenderFemale
  models.Person:
    properties:
      age:
        type: integer
      created_at:
        type: string
      gender:
        $ref: '#/definitions/models.GenderType'
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
  models.PersonInput:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  models.PersonUpdate:
    properties:
      age:
        type: integer
      gender:
        $ref: '#/definitions/models.GenderType'
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: API для управления записями о людях с обогащением данных из внешних
    источников.
  title: Person Service API
  version: "1.0"
paths:
  /api/v1/persons:
    get:
      description: Возвращает список записей о людях с поддержкой пагинации и фильтров
        по всем полям. Если записей нет, возвращается сообщение.
      parameters:
      - default: 10
        description: Лимит записей
        in: query
        name: limit
        type: integer
      - default: 0
        description: Смещение
        in: query
        name: offset
        type: integer
      - description: Фильтр по имени
        in: query
        name: name
        type: string
      - description: Фильтр по фамилии
        in: query
        name: surname
        type: string
      - description: Фильтр по отчеству
        in: query
        name: patronymic
        type: string
      - description: Фильтр по возрасту
        in: query
        name: age
        type: integer
      - description: Фильтр по полу (male, female)
        in: query
        name: gender
        type: string
      - description: Фильтр по национальности
        in: query
        name: nationality
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список записей или сообщение о пустом списке
          schema:
            items:
              $ref: '#/definitions/models.Person'
            type: array
        "400":
          description: Некорректные параметры, например, отрицательный лимит
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить список записей о людях
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Создаёт запись о человеке с указанным именем, фамилией (опционально)
        и отчеством (опционально). Данные обогащаются через внешние API (Agify.io,
        Genderize.io, Nationalize.io).
      parameters:
      - description: Данные человека
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.PersonInput'
      produces:
      - application/json
      responses:
        "201":
          description: Созданная запись
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Некорректный JSON или ошибка валидации, например, пустое имя
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера, например, сбой API обогащения
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать новую запись о человеке
      tags:
      - persons
  /api/v1/persons/{id}:
    delete:
      description: Удаляет запись о человеке по указанному ID.
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Запись удалена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ID, например, не число
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Запись не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить запись о человеке
      tags:
      - persons
    get:
      description: Возвращает запись о человеке по указанному ID.
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Запись найдена
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Некорректный ID, например, не число
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Запись не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить запись о человеке по ID
      tags:
      - persons
    patch:
      consumes:
      - application/json
      description: Частично обновляет существующую запись о человеке по указанному
        ID. Возвращает сообщение об успехе, совпадении данных или ошибке.
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      - description: Обновлённые данные человека
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.PersonUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Запись обновлена или данные не изменены
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ID, JSON, пустой запрос, несуществующее поле или
            ошибка валидации
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Запись не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Частично обновить запись о человеке
      tags:
      - persons
    put:
      consumes:
      - application/json
      description: Полностью обновляет существующую запись о человеке по указанному
        ID.
      parameters:
      - description: ID человека
        in: path
        name: id
        required: true
        type: integer
      - description: Обновлённые данные человека
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.Person'
      produces:
      - application/json
      responses:
        "200":
          description: Запись обновлена
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ID, JSON или ошибка валидации
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Запись не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить запись о человеке
      tags:
      - persons
swagger: "2.0"
